== Dokumentation
=== 1. Funktionen von HappyBay App
==== 1.1 Laufen die Anwendung
Zuerst verwenden Sie `docker-compose up` im Konsole, und laufen Sie
dann die Spring Boot-Anwendung.

==== 1.2 Startseite
Öffnen Sie den Browser und besuchen Sie `http://localhost:8080/`. Dies ist unsere
Homepage. Wir zeigen alle von den Benutzern hinzugefügten Geräten auf dieser Seite.
Auf dem Banner oben befinden sich drei Buttons, die `Start` Button, die `Anmelden`
Button und die `registrieren` Button sowie ein Textfeld für die Suche.

==== 1.3 Registrierung und Anmeldung
Klicken Sie auf die Button `Registrieren` und wechseln Sie zur Registrierungsseite
`http://localhost:8080/register`. Hier müssen Sie Ihre Name, E-Mail-Adresse,
Benutzername und Passwort eingeben und können auch das Foto hochladen.

Nach der Registrierung springen Sie zur Bestätigungsseite, klicken dann auf die
`Anmelden` Button und springen zu `http://localhost:8080/login`, um sich anzumelden.

Nach dem Login kommen wir zur Startseite des Benutzers.
Am oberen Banner befinden sich `Meine Daten`, `Mein Propay`, `Meine Geräte`, `Meine Ausleihen`,
das Symbol für die Benachrichtigung und der Button zum Abmelden.

==== 1.4 Benutzerinformationen anzeigen und ändern
Klicken Sie auf `Meine Daten`, um die Seite von meinen Daten
`http://localhost:8080/use/profile` aufzurufen. Auf dieser Seite können Sie Ihr
eigenes Bild, Namen, E-Mail-Adresse, Adresse, Benutzername und die für die Anmeldung
verwendete Rolle sehen. Sie können auch Ihre Daten ändern. Klicken Sie auf die
`Bearbeiten`, um die Seite zum Ändern der Informationen aufzurufen.
`Http://localhost:8080/user/PersonInfo/Profile/ChangeProfile` Auf dieser Seite können
Sie Ihre eigenen Informationen ändern.

==== 1.5 Mein Propay-Konto aufladen und anzeigen
Klicken Sie auf die Button `Meine Propay`, um zur Propay-Seite
`http://localhost:8080/user/proPay` zu besuchen. Dort werden Kontoinformationen,
Kontostand, Reservierungen, Konten sowie vergangene Überweisungen angezeigt.
Hier können Leute auch ihr Konto aufladen. Nach dem Aufladen wird automatisch auf
meine Startseite springen. Jetzt rufen wir die Seite `mein Propay` erneut auf
und sehen zu diesem Zeitpunkt den Übertragungssatz und den neuen Kontostand.

==== 1.6 Geräte hinzufügen und bearbeiten
Klicken Sie auf `Meine Geräte` und gehen Sie auf meine Gerät Seite
`http://localhost:8080/user/myThings`. Diese Seite hat ein Button `Neues Gerät hinzufügen`.
Klicken Sie auf diese Button, um zur Seite `Element hinzufügen` zu wechseln:
`http://localhost:8080/user/addGeraet`. Hier können Sie Ihren Artikel hochladen.
Nachdem die Informationen ausgefüllt sind, kehren Sie zu meiner Geräte Seite zurück.
Hier zeigen wir jeden Artikel mit Bildern, Namen des Artikels, der Beschreibung des
Artikels, den Kosten des Artikels, der Anzahlung des Artikels, der Abholadresse,
dem Zeitraum, in dem der Artikel gemietet werden kann, und der Person an Wer hat
den Gegenstand geliehen.

Klicken Sie auf `Bearbeiten` und wechseln Sie zu `http://localhost:8080/user/geraet/edit/{id}``,
um die Informationen zu ändern. Klicken Sie auf `Löschen`. Das entsprechende
Geräte wird gelöscht.

Klicken Sie auf `Mehr`, um zur Detailseite dieses Artikels zu gelangen.
`Http://localhost:8080/user/geraet/{id}`.Hier können wir zu den Informationen des
Besitzers `http://localhost:8080/user/besitzerInfo/id` springen. Auf dieser Seite
können wir die Informationen und Bewertungen des Benutzers sehen.

==== 1.7 Miet- und Zahlungsfunktionen
Jetzt sind die Miet- und Zahlungsfunktionen zwischen Benutzern.

Wir sind auf die Homepage `http://localhost:8080/` gekommen, und auf dieser Seite
gibt es alle Geräte, die gemietet werden können. Wir klicken auf `Mehr`, um die
spezifische Informationsseite dieses Artikels aufzurufen `http://localhost:8080/user/geraet/{id}` .

Hier können wir die Miete dieses Gerätes beantragen und die Information der
Besitzer des Gerätes eingeben. Klicken Sie auf die `Anfrage`. Wir werden
`http://localhost:8080/user/anfragen/id?` Aufrufen.

Zuerst stellen wir fest, ob der Mietzeitraum für mich richtig ist, und geben das
Datum an, an dem wir vermieten möchten, und warum wir es vermieten möchten.
Klicken Sie dann auf den Button `Senden`, und warten Sie auf die Antwort des Besitzers.

Wenn der Besitzer des Objekts eine Mietanfrage von einem anderen Benutzer erhält,
werden Sie über die oberste `Benachrichtigung` Button darüber informiert, dass jemand
das Gerät mieten möchte, klicken Sie auf die `Benachrichtigung` Button und wechseln
Sie zur `http://localhost:8080/User/notification`. Wir können die spezifischen
Anforderungsinformationen der anderen Benutzer sehen, einschließlich des Namens
des Mieters, der Informationen sowie der Start- und Endzeit des Miet. Der Benutzer
kann wählen, ob er die Anfrage von der anderen Benutzer annehmen wird. Nach Annahme
der Anfrage wird unter dem entsprechenden Gerät angezeigt, unter welcher Zeitraum
schon verliehen wird, wer die Ware bereits gemietet hat. Das Datum der Verfügerbar
zeigt die übriger Mietraum an. Zu diesem Zeitpunkt zeigt die Reservierung des Mieter
propay die zum Zeitpunkt der Vermietung fällige Kaution und die gemieteten
Waren unter den Ausleihen an. Klicken Sie auf das `Detail`, um die Details der Miet
Gerät anzuzeigen. Klicken Sie auf Artikel zurückgeben, um das Gerät zurückzugeben.
Zurück, Sie können es jederzeit zurückgeben.

An diesem Punkt erhält der Besitzer des Artikels eine Benachrichtigung. Klicken
auf das Benachrichtigungssymbol oben, um zu entscheiden, ob Sie den zurückgesendeten
Artikel annehmen möchten. Und um die Transaktion aufzuzeichnen, wird die Reservierung
unter dem Mieter propay den entsprechenden Betrag löschen und Kaution Block entfalten.

Wenn der Besitzer  den zurückgesandten Artikel nicht annehmen, erhält der Mieter
die Informationen. Und es gibt eine Administrationsseite `http:localhost:8080/admin`.
Diese Schnittstelle kann alle Benutzer und Konflikte zwischen Benutzern anzeigen.
Der Administrator wählt den entsprechenden Konflikt aus und entscheidet über die Verarbeitung.
Ob die vom Mieter gezahlte Kaution zurückerstattet wird.


==== 1.8 Änderungen an Design und Feature zu implementieren für Aufgabenstellung Teil II
In der Modell Geraet fügen wir einen booleschen Forsale-Wert hinzu, der Anfangswert
ist false. Wenn wir den Gerät erstellen, fügen wir ein Check Box hinzu, um auszuwählen,
ob der zu erstellende Gerät zur Vermietung oder zum Verkauf bestimmt ist. Der Forsale
wird auf true gesetzt,wenn der Gerät zum Verkauf ist.

Attribute ausblenden, die nicht mit dem Verkauf zusammenhängen, wenn Sie den Gerät
zum Verkauf erstellen.

Nachdem das Objekt erstellt wurde, markieren wir, ob der Artikel vermietet oder
verkauft werden soll.

Wenn ein Benutzer dieses Objekt kauft, befindet sich der Gerät im Eigentum des
Käufers, und der Käufer kann ihn auch in ein Miet Gerät umwandeln oder das Gerät löschen.

=== 2. Presentation Layer
==== 2.1Templates
===== 2.1.1 Admin

[cols="1,2"]
|===
|allUsers
|Zeigen die Fragmente der Benutzer-ID, den Namen des Benutzers und den Kontostand an.

|changePassword
|Zeigt das Fragment der Passwortänderung an.

|conflicts
|Zeigt das Fragment von Verarbeitungskonflikten an.

|fragmentsAdmin
|Alle Benutzer und Konflikte anzeigen.

|propayAdminNotAvailable
|Zeigt time out der Propay an.
|===

Diese Templates werden vom AdminController gesteuert.

===== 2.1.2 Default

[cols="1,2"]
|===
|AboutUs
|Zeigen das Team.

|confirmationOfRegistration
|Zeigt die Bestätigungsinformationen an

|index
|Zeigen die Benachrichtigungen der Erinnerung an, um zurückzukehren.

|login
|Zeigt die Informationen zum Abmelden, zum Benutzernamen oder zum Kennwort und zum Anmeldetextfeld an.

|register
|Zeigen Sie die Registrierungsseite an.
|===

Diese Templates werden vom DefaultController gesteuert.

===== 2.1.3 User
[cols="1,2"]
|===
|addGeraet
|Zeigt die Seite zum Hinzufügen von Geräte an.

|anfragen
|Anzeige für die Mietanforderungsseite, hier kann der Benutzer das Zeitintervall auswählen und eine Nachricht hinterlassen.

|besitzerInfo
|Zeigen Sie die Detailinformationen eines Artikelbesitzers an.

|changeProfile
|Zeigt die Änderungsprofilseite an.

|changeToRent
|Zeigt die Seite von Gerät für Verkauf in Ferät für Miet umwandeln an.

|confirmBezahlen
|Zeigt die Bestätigungsinformation der Zahlung an.

|edit
|Gerätseite bearbeiten anzeigen.

|geraet
|Informationen zum Gerät anzeigen

|myThings
|Zeigt die Seite der Geräte

|notifications
|Zeigen die Benachrichtigungsseite an. Hier können Personen die Anforderungen annehmen oder ablehnen.

|profile
|Zeigt User’s Information page an.

|proPay
|Zeigen die Propay Seite an.

|rentThings
|Zeigen die Seite mit den Mietsachen an, hier können die Leute die Artikel finden, die sie gemietet haben.
|===
addGeraet,changeToRent,geraet,edit,rentThings werden vom GeraetController gesteuert.

anfragen,notifications werden vom NotificationController gesteuert.

Andere Templates werden vom UserController gesteuert.

===== 2.1.4 Fragments

[cols="1,2"]
|===
|fragments
|Kleine Fragments für andere Seiten.
|===

==== 2.2 Controllers
===== 2.2.1AdminController
Der AdminController übernimmt alle Aufgaben des Administrators.
Es enthält das Ändern des Passworts, die Behandlung von Konflikten, das Abziehen
der Einzahlung oder die Freigabe der Einzahlung.

===== 2.2.2 DefaultController
Dieser Controller übernimmt die Registrierung, Anmeldung und Anzeige der Startseite der Anwendung.

===== 2.2.3 UserController
Dieser Controller übernimmt alle Aufgaben der Benutzer.
Es enthält Anzeige der profile, Informationen zum Besitzer, Informationen zum Mieter,
ProPay, Benachrichtigungen und Anforderungen, sowie
das Aufladen von Propay-Konten,Profile ändern.

===== 2.2.4 NotificationController
Dieser Controller übernimmt alle Aufgaben der Notification.
Mietanfragen annehmen oder ablehnen, Rücksendeanfragen annehmen oder ablehnen
gehört zum diesem Controller.

===== 2.2.5 GeraetController
Dieser Controller übernimmt alle Aufgaben der Geraet.
Es enthält Anzeige der gemietete Geräte, das Erstellen von Miet Geräte,das Erstellen von Verkaufsgeräte,
das Bearbeiten von Geräte sowie das Löschen Gerät,
die Gerät für den Verkauf in Gerät für die Vermietung umwandeln, Gerät zurücksenden

=== 3. Configure the Database
Es gibt insgesamt 14 Modelle.

==== 3.1 Helper Classes for Views
GeraetWithRentEvent, InformationForMenuBadges, NotificationMitAnfragePerson und
PersonMitAccount sind Hilfsklassen für Ansichten.

==== 3.2 Account
Es ist eine Entität für Propay-Konto. Es enthält Konto, Betrag und Reservierungen
für die Erfassung der Einzahlung.

==== 3.3 Bild
Entität für Bilds, enthält ID und wir speichern Bilder als Byte [].

==== 3.4 Comment
Benutzer können den Mietern Kommentare geben.
Es enthält ID, PersonID, geraetTitel, Nachricht, SenderFrom und Daten.

==== 3.5 Geraet
Entität für Gerät .Es enthält Id, besitzer, beschreibung, titel, kosten, kaution,
abholort, mietezeitpunktstart, mieterzeitpunktend, boolean for sale, verfuegbarEvents
zum Erfassen von Zeiträumen, die gemietet werden können, Mietevents, um bereits
gemietete Zeiträume aufzuzeichnen, und Bilder.

==== 3.6 Notification
Entität zur Benachrichtigung Benachrichtigungen können an die Rücksendezeit erinnern,
an die Miet- und Retourenanfragen erinnern.

==== 3.7 Person
Diese Entität wird zum Aufzeichnen von Personen verwendet, jede Person hat eine
Rolle, es kann sich um einen Benutzer oder einen Administrator handeln. Neben der
Rolle enthält es auch ID, vorname, nachname, kontakt, adresse, benutzername, passwort,
foto und kommentare.

==== 3.8 RentEvent
Entity für mieten Event.

==== 3.9 Reservation
Diese Entität wird zur Aufnahm der Kaution verwendet.
Es hat eine ID, einen Betrag und das entsprechende Konto.

==== 3.10 TimeInterval
Entität für einen Zeitraum, hat es eine Startzeit, eine Endzeit und eine Dauer.

==== 3.11 Transaction
Es zeichnete die Transaktionen zwischen zwei Benutzern auf. Es hat ID, Betrag,
Empfänger und Geber.

=== 4. Service Layer

==== 4.1 AdminServices

===== 4.1.1 AdminService
Für Administrator, das System verwalten, mit Konflikten umgehen und alle Benutzer
verwalten

==== 4.2 DefaultServices

===== 4.2.1 DefaultService
Wandle bild aus byte[] in string um

===== 4.2.2 UserValidator
Wird zur Registrierung von Benutzern verwendet. Die Ausgabe verschiedener Fehler,
wenn die Benutzereingaben die Anforderung nicht erfüllen.

==== 4.3 UserServices

===== 4.3.1 GeraetService
Wird für die Verwaltung von Artikeln verwendet.

===== 4.3.2 MailService
Wird für die Zustellung von E-Mails verwendet.
Benutzer erhalten eine E-Mail als Erinnerung. Es können Erinnerungen an Mietanfragen,
Rücksendeanfragen und die Ergebnisse von Anforderungen angezeigt werden.

===== 4.3.3 NotificationService
Wird für Benachrichtigungen verwendet.

===== 4.3.4 PersonService
Erstellen Kommentare, erstellen einen neuen Benutzer und speichern Sie ihn

===== 4.3.5 PictrueService
Wird zur Ausgabe von Bildern verwendet.

==== 4.4 ProPayService
Für Peopay. Erstellen Kaution Reservation,  Kaution wieder freigeben, Kaution
Abzug, erhalten Transactions, überweisen und aufladen von Konto.

==== 4.5 UserDetailsServiceImpl
Wird für die Anmeldung von Benutzern verwendet, wenn der Benutzername nicht
gefunden wird, wird die Ausnahme "Ungültiger Benutzername" ausgelöst.

=== 5. Probleme die wir lösen mussten
Als Grundgerüst unserer Anwendung haben wir Projekt 4 benutzt, da die Aufgabenstellungen
ähnlich sind. Bei der Entwicklung der App haben wir die ganze Zeit auf eine klare
Struktur geachtet was es uns sehr einfach gemacht hat, den Code bei Bedarf zu ändern.
So haben wir bei HTML z.B. Fragments benutzt, was Frontend Änderungen sehr einfach gemacht hat.
Ein größeres Problem war das Ausführen des docker-compose up Befehls, da wir zu
Beginn immer keine Verbindung zur Datenbank herstellen konnten. Es hat sich herausgestellt,
dass in unserem Fall die Datenbank sehr lange braucht um zu starten. Dabei half auch
das “wait-for-it” nicht. Das Problem haben wir gelöst indem wir zuerst das Befehl
docker-compose up -d ausgeführt haben und danach ca. 5 min gewartet haben. Erst
nach dieser Zeit hat docker-compose up funktioniert.
Ein weiteres Problem war, dass die Redirects im Controller nach Umstellung auf
Proxy nicht mehr funktioniert haben. Hier mussten wir dann bei Redirects den ganzen
url angeben.
Um die Kommunikation im Team zu erleichtern haben wir eine Whatsapp und Slack Gruppe erstellt.
Wir haben uns im Team immer gut verstanden und haben alle Design-Entscheidungen
miteinander vorher abgestimmt. Eine Differenz die wir zu Beginn hatten war, ob
wir ein oder zwei SCS schreiben sollen. Nach Abstimmung haben wir uns entschieden
ein SCS zu schreiben.
